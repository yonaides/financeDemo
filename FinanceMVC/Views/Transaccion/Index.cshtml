@model dynamic
@{
    ViewBag.Title = "Nueva transacción";
}

<h2>Nueva transacción</h2>

<form>

    <div class="form-group">
        <label class="" for="selectbasic">Seleccione la tarjeta</label>       
        <select id="productos" name="selectbasic" class="form-control"></select>
    </div>

    <div class="form-group">
        <label class="" for="estadoTarjeta">Estado de Tarjeta</label>
        <div id="estadosCombo">
            <input id="estadoTarjeta" type="text" class="form-control" placeholder="Estado Tarjetas" />
            <input type="hidden" id="estadoTarjetaId" name="estadoTarjeta" value="">
        </div>
        
    </div>

    <div class="form-group">
        <label class="" for="selectbasic"></label>
        <select id="tipoTransaccion" name="selectbasic" class="form-control">
            <option value="1">Debito</option>
            <option value="2">Credito</option>
        </select>
    </div>

    <div class="form-group">
        <label for="Descripcion">Descripción</label>
        <input id="Descripcion" type="text" value="" class="form-control" />
    </div>

    <div class="form-group">
        <label for="Monto">Monto</label>
        <input id="Monto" type="number" value="" class="form-control" />
    </div>

    <div class="form-group">
        <label for="FechaTransaccion">Fecha Transacción</label>
        <input id="FechaTransaccion" type="date" value="" class="form-control" />
    </div>

    <input id="btnAgregar" type="button" class="btn btn-primary" value="Agregar" />
    <button class="btn btn-primary">Guardar</button>

    <ul id="ulTransacciones" class="list-group">  </ul>

    <table class="table" id="detalleTransacciones">
        <thead class="thead-dark">
            <tr>
                <th>Tarjeta</th>
                <th>Fecha Estado</th>
                <th>Transacción</th>
                <th>Descripción</th>
                <th>Monto</th>
                <th>Fecha</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</form>


@section scripts
{
    <script>
        $(document).ready(function () {

            $('#detalleTransacciones').DataTable();
            var transaccion = {};
            var transacciones = {
                listado: []
            };

            var producto = {};

            llenarComboProcutos();

            $("#productos").on("change", function (data) {

                producto.productoId = $(this).find("option:selected").attr('value');
                producto.nombre = $("#productos option:selected").text();
               
                buscarEstadosTarjetas(producto.productoId);
            });

            function buscarEstadosTarjetas(data) {

                console.log('api/estadostarjetas/productoid/' + data + '?query=%QUERY');

                var dataSource = new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('fechaEstado'),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: 'http://localhost:1214/api/estadostarjetas/productoid/' + data + '?query=%QUERY',
                        wildcard: '%QUERY'
                    }
                });

                $("#estadosCombo #estadoTarjeta").typeahead("destroy");
                $('#estadosCombo #estadoTarjeta').typeahead({
                    minLength: 4,
                    highlight: true
                }, {
                        name: 'estadoTarjetas',
                        display: 'fechaEstado',
                        source: dataSource
                    }).on("typeahead:select", function (e, estadoTarjeta) {
                        $("#estadoTarjetaId").val(estadoTarjeta.estadoTarjetaId);
                        console.log(estadoTarjeta);
                    });
            };

            $('#btnAgregar').click(function () {
                agregarTransaccion();
            })

            function agregarTransaccion() {

                var detalleTransaccionTable = $('#detalleTransacciones').DataTable();

                transaccion.productoId = $("#productos option:selected").attr("value");
                transaccion.EstadoTarjetaId = $("#estadoTarjetaId").val();
                transaccion.FechaTransaccion = $("#FechaTransaccion").val();
                transaccion.Monto = $("#Monto").val();
                transaccion.Descripcion = $("#Descripcion").val();


                detalleTransaccionTable.row.add([$("#productos option:selected").text(),
                $("#estadoTarjeta").val(),
                $("#tipoTransaccion option:selected").text(),
                $("#Descripcion").val(),
                $("#Monto").val(),
                $("#FechaTransaccion").val()]).draw(false);
                transacciones.listado.push(transaccion);


            };

            function llenarComboProcutos() {

                var buscarProductos = $.ajax({
                    method: "GET",
                    url: "http://localhost:1214/api/producto",
                    dataType: "json"
                });

                buscarProductos.done(function (data) {
                    var $productoSelect = $("#productos");
                    $productoSelect.find('option').remove();
                    $.each(data, function (i, item) {
                        $productoSelect.append('<option value=' + item.productoId + '>' + item.nombre + '</option>')
                    });
                })
            }

        });


    </script>
}